version: '3.7'

services:

  # https://medium.com/faun/managing-mongodb-on-docker-with-docker-compose-26bf8a0bbae3
  # mongo:
  #   image: mongo
  #   hostname: mongo
  #   container_name: mongo
  #   restart: always
  #   environment:
  #     - MONGO_INITDB_DATABASE=admin
  #     - MONGO_INITDB_ROOT_USERNAME=mongo_admin
  #     - MONGO_INITDB_ROOT_PASSWORD=PlanTL-2019
  #   volumes:
  #     - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
  #     - /data/db:/data/db
  #   ports:
  #     # - 27017-27019:27017-27019
  #     - 27017:27017

  flask:
    build: ./backend
    hostname: flask
    container_name: flask
    restart: always
    environment:
      - MONGO_URI=mongodb://mesinesp:mesinesp@bsccnio01.bsc.es:27017/BvSalud
      # - MONGO_URI=mongodb://mesinesp:mesinesp@mongo:27017/BvSalud?authSource=admin
      # - MONGO_URI=mongodb://mesinesp:mesinesp@mongo:27017/BvSalud
      # - MONGO_URI=mongodb://mongo:27017/BvSalud
      - JWT_SECRET_KEY=secret
    command: uwsgi app.ini
    # links:
    #   - mongo

  nginx:
    build: ./server
    hostname: nginx
    container_name: nginx
    restart: always
    links:
      - flask
      - angular
    ports:
      - 80:80

  angular:
    build: ./frontend
    hostname: angular
    container_name: angular
    restart: always
    environment:
      - REST_API_URL=http://bsccnio01.bsc.es/api
    ports:
      - 4200:4200
    command: ng serve --host 0.0.0.0 --disableHostCheck --source-map=false --aot --prod --live-reload=false
