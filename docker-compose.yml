version: "3.7"
services:
  mongo:
    container_name: mongo
    image: mongo:4.2
    volumes:
      - /var/lib/mongodb:/data/db
    ports:
      - 27017:27017
    entrypoint: mongod --bind_ip_all
  flask:
    container_name: flask
    links:
      - mongo
    build: ./backend
    environment:

      # Enables the debug mode
      - FLASK_ENV=development

      # [Option A] Absolute development mode without risks of damaging the real MongoDB
      # Restoring the real data from tha latest backup into your localhost will make available the databases used by the API.
      # $ scp mongo_admin@bsccnio01.bsc.es:/data/Mongo_backup/mongodb_backups/daily/Wed.gz /home/alejandro/Downloads/
      # $ mongorestore --gzip --archive=/home/alejandro/Downloads/Wed.gz --nsInclude="BvSalud.*"
      # $ mongorestore --gzip --archive=/home/alejandro/Downloads/Wed.gz --nsInclude="datasets.*"
      # $ sudo systemctl stop mongod.service
      - MONGO_URI=mongodb://mongo/BvSalud
      - MONGO_DATASETS_URI=mongodb://mongo/datasets

      # [Option A] Development against the real remote database
      # First, you should have a VPN connection tunnel stablished to reach the mongod service remotely.
      # $ sudo apt update && sudo apt install -y openfortivpn && sudo openfortivpn gw.bsc.es:443 -u USERNAME
      # - MONGO_URI=mongodb://bsccnio01.bsc.es/BvSalud
      # - MONGO_DATASETS_URI=mongodb://bsccnio01.bsc.es/datasets
    ports:
      - 5000:5000
    volumes:
      - ./backend:/app
    command: flask run --host 0.0.0.0
  angular:
    container_name: angular
    links:
      - flask
    build: ./frontend
    volumes:
      - ./frontend:/app
    environment:
      - APP_API_URL=http://localhost:5000
      - APP_BROWSER_STORAGE_KEY=devMesinesp
    ports:
      - 4200:4200
    
    command: ng serve --host 0.0.0.0
